<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-07-24T04:27:36Z" name="Suite" finished-at="2020-07-24T04:27:52Z" duration-ms="16114">
    <groups>
    </groups>
    <test started-at="2020-07-24T04:27:36Z" name="Test" finished-at="2020-07-24T04:27:52Z" duration-ms="16114">
      <class name="Demo.UnitTest">
        <test-method signature="test1()[pri:0, instance:Demo.UnitTest@5d534f5d]" started-at="2020-07-24T04:27:44Z" name="test1" finished-at="2020-07-24T04:27:52Z" duration-ms="8295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- Demo.UnitTest -->
      <class name="Demo.FirstTest">
        <test-method is-config="true" signature="test()[pri:0, instance:Demo.FirstTest@576d5deb]" started-at="2020-07-24T04:27:36Z" name="test" finished-at="2020-07-24T04:27:43Z" duration-ms="6510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="validedErrorMasage()[pri:0, instance:Demo.FirstTest@576d5deb]" started-at="2020-07-24T04:27:43Z" name="validedErrorMasage" finished-at="2020-07-24T04:27:44Z" duration-ms="929" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at Demo.FirstTest.validedErrorMasage(FirstTest.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validedErrorMasage -->
        <test-method is-config="true" signature="validateTestCase(org.testng.ITestResult)[pri:0, instance:Demo.FirstTest@576d5deb]" started-at="2020-07-24T04:27:44Z" name="validateTestCase" finished-at="2020-07-24T04:27:44Z" duration-ms="358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validedErrorMasage status=FAILURE method=FirstTest.validedErrorMasage()[pri:0, instance:Demo.FirstTest@576d5deb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTestCase -->
      </class> <!-- Demo.FirstTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
